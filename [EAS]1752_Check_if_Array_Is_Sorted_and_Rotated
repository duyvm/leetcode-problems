{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNHNTGONQ85SDe8FpcydFxL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1752. Check if Array Is Sorted and Rotated\n","\n","https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/description/\n","\n","Given an array `nums`, return `true` if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return `false`.\n","\n","There may be duplicates in the original array.\n","\n","**Note**: An array `A` rotated by `x` positions results in an array `B` of the same length such that `A[i] == B[(i+x) % A.length]`, where `%` is the modulo operation.\n","\n","**Constraints:**\n","- `1 <= nums.length <= 100`\n","- `1 <= nums[i] <= 100`"],"metadata":{"id":"OhbFjTlo_zih"}},{"cell_type":"markdown","source":["**Example 1:**\n","\n","- Input: `nums = [3,4,5,1,2]`\n","- Output: `true`\n","- Explanation: `[1,2,3,4,5]` is the original sorted array.\n","\n","  You can rotate the array by `x = 3` positions to begin on the the element of value 3: [3,4,5,1,2].\n","\n","**Example 2:**\n","\n","- Input: `nums = [2,1,3,4]`\n","- Output: `false`\n","- Explanation: There is no sorted array once rotated that can make nums.\n","\n","**Example 3:**\n","\n","- Input: `nums = [1,2,3]`\n","- Output: `true`\n","- Explanation: [1,2,3] is the original sorted array.\n","\n","  You can rotate the array by x = 0 positions (i.e. no rotation) to make nums."],"metadata":{"id":"IEpVafbfC7W-"}},{"cell_type":"markdown","source":["## Observations\n","\n","- The original array has ascending order.\n","- If it is rotated once, there will be an index `i` at which the order is descending.\n","- If there are two or more places at which order is descending then its original array is not sorted and rotated.\n","- The sorted and rotated once array must have attribute `nums[-1] <= nums[0]`\n"],"metadata":{"id":"e4M1bpIEDWc6"}},{"cell_type":"code","source":["test_cases = [\n","    {\n","        \"input\": {\n","            \"nums\": [3,4,5,1,2]\n","        },\n","        \"output\": True\n","    },\n","    {\n","        \"input\": {\n","            \"nums\": [2,1,3,4]\n","        },\n","        \"output\": False\n","    },\n","    {\n","        \"input\": {\n","            \"nums\": [1,2,3]\n","        },\n","        \"output\": True\n","    },\n","]"],"metadata":{"id":"wNzMYBytDXO7","executionInfo":{"status":"ok","timestamp":1738469430361,"user_tz":-420,"elapsed":379,"user":{"displayName":"Duy Võ Minh","userId":"02029714770423543928"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["from typing import List\n","from collections import defaultdict\n","from collections import deque\n","\n","class Solution:\n","    def check(self, nums: List[int]) -> bool:\n","\n","        count = 0\n","\n","        for i in range(1, len(nums)):\n","            if nums[i] < nums[i-1]:\n","                count += 1\n","\n","            if count > 1:\n","                return False\n","\n","        if count == 1 and nums[-1] > nums[0]:\n","            return False\n","        return True"],"metadata":{"id":"7N6VBRdIDUwD","executionInfo":{"status":"ok","timestamp":1738470231062,"user_tz":-420,"elapsed":320,"user":{"displayName":"Duy Võ Minh","userId":"02029714770423543928"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["solution = Solution()\n","for test_case in test_cases:\n","    result = solution.check(test_case[\"input\"][\"nums\"])\n","    if result != test_case[\"output\"]:\n","        print(f'Failed test case with input: {test_case[\"input\"]} and output: {test_case[\"output\"]} vs result: {result}')"],"metadata":{"id":"CMDKnxwjGL6v","executionInfo":{"status":"ok","timestamp":1738470233380,"user_tz":-420,"elapsed":303,"user":{"displayName":"Duy Võ Minh","userId":"02029714770423543928"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Ptz87InoLH62"},"execution_count":null,"outputs":[]}]}