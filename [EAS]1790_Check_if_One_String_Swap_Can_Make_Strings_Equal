{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNatHYlO1CIfPSlvW8RkS9R"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1790. Check if One String Swap Can Make Strings Equal\n","\n","https://leetcode.com/problems/check-if-one-string-swap-can-make-strings-equal\n","\n","You are given two strings `s1` and `s2` of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices.\n","\n","Return `true` if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return `false`.\n","\n","**Constraints:**\n","- `1 <= s1.length, s2.length <= 100`\n","- `s1.length == s2.length`\n","- `s1` and `s2` consist of only lowercase English letters."],"metadata":{"id":"OhbFjTlo_zih"}},{"cell_type":"markdown","source":["**Example 1:**\n","\n","- Input: `s1 = \"bank\", s2 = \"kanb\"`\n","- Output: `true`\n","- Explanation: For example, swap the first character with the last character of s2 to make \"bank\".\n","\n","**Example 2:**\n","\n","- Input: `s1 = \"attack\", s2 = \"defend\"`\n","- Output: `false`\n","- Explanation: It is impossible to make them equal with one string swap.\n","\n","**Example 3:**\n","\n","- Input: `s1 = \"kelb\", s2 = \"kelb\"`\n","- Output: `true`\n","- Explanation: The two strings are already equal, so no string swap operation is required."],"metadata":{"id":"IEpVafbfC7W-"}},{"cell_type":"code","source":["test_cases = [\n","    {\n","        \"input\": {\n","            \"s1\": \"bank\",\n","            \"s2\": \"kanb\"\n","        },\n","        \"output\": True\n","    },\n","    {\n","        \"input\": {\n","            \"s1\": \"attack\",\n","            \"s2\": \"defense\"\n","        },\n","        \"output\": False\n","    },\n","    {\n","        \"input\": {\n","            \"s1\": \"kelb\",\n","            \"s2\": \"kelb\"\n","        },\n","        \"output\": True\n","    },\n","]"],"metadata":{"id":"eRDi9kdUqVsY","executionInfo":{"status":"ok","timestamp":1738768296342,"user_tz":-420,"elapsed":588,"user":{"displayName":"Duy Võ Minh","userId":"02029714770423543928"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["## Observations\n","\n","- `s1` and `s2` are euqal when for `0 <= i < s1.length`, `s1[i] == s2[i]`\n","- One swap operation on one string only\n","- If one swap operation make `s1 = s2` then `s1` and `s2` must have `2` indices that are different\n"," - Let that two indices are `i` and `j`, then the following conditions must be true for making two string be equal\n","    - `s1[i] = s2[j]` and vice versa"],"metadata":{"id":"e4M1bpIEDWc6"}},{"cell_type":"code","source":["from typing import List\n","from collections import defaultdict\n","from collections import deque\n","\n","class Solution:\n","    def areAlmostEqual(self, s1: str, s2: str) -> bool:\n","\n","        diff_indices = []\n","\n","        for i in range(len(s1)):\n","            if s1[i] != s2[i]:\n","                diff_indices.append(i)\n","\n","            if len(diff_indices) > 2:\n","                return False\n","\n","        if len(diff_indices) == 0:\n","            return True\n","\n","        if len(diff_indices) == 2:\n","            i, j = diff_indices\n","            return s1[i] == s2[j] and s1[j] == s2[i]\n","        else:\n","            return False"],"metadata":{"id":"7N6VBRdIDUwD","executionInfo":{"status":"ok","timestamp":1738768670028,"user_tz":-420,"elapsed":562,"user":{"displayName":"Duy Võ Minh","userId":"02029714770423543928"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["solution = Solution()\n","for test_case in test_cases:\n","    result = solution.areAlmostEqual(test_case[\"input\"][\"s1\"], test_case[\"input\"][\"s2\"])\n","    if result != test_case[\"output\"]:\n","        print(f'Failed test case with input: {test_case[\"input\"]} and output: {test_case[\"output\"]} vs result: {result}')"],"metadata":{"id":"CMDKnxwjGL6v","executionInfo":{"status":"ok","timestamp":1738768689683,"user_tz":-420,"elapsed":411,"user":{"displayName":"Duy Võ Minh","userId":"02029714770423543928"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"9XZQR2FXW3RL"},"execution_count":null,"outputs":[]}]}